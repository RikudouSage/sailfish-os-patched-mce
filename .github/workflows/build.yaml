name: Build RPMs

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  OS_VERSION: 4.4.0.68
  MCE_VERSION: 1.109.1
  MCE_RELEASE: 1.9.2.jolla

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build mce
    strategy:
      matrix:
        arch: ['aarch64']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Clone mce
        uses: actions/checkout@v3
        with:
          repository: sailfishos/mce
          ref: ${{ env.MCE_VERSION }}
          path: mce
          clean: false
          submodules: recursive

      - name: Copy patches
        run: cp *.patch mce

      - name: Patch
        working-directory: mce
        run: |
          patch < assistantButton.patch
          cd rpm
          patch < ../spec.patch
          sed -i "s/{{{releaseName}}}/$MCE_RELEASE/g" mce.spec

      - name: Prepare
        working-directory: mce
        run: docker pull coderus/sailfishos-platform-sdk:$OS_VERSION && mkdir output

      - name: Build ${{ matrix.arch }}
        working-directory: mce
        run: docker run --rm --privileged -v $PWD:/share coderus/sailfishos-platform-sdk:$OS_VERSION /bin/bash -c "
          mkdir -p build ;
          cd build ;
          cp -r /share/* . ;
          mb2 -t SailfishOS-$OS_VERSION-${{ matrix.arch }} build ;
          sudo cp -r RPMS/*.rpm /share/output"

      - name: Upload RPM (${{ matrix.arch }})
        uses: actions/upload-artifact@v2
        with:
          name: rpm-${{ matrix.arch }}
          path: mce/output
#  release:
#    name: Release
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs:
#      - build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download armv7hl
#        uses: actions/download-artifact@v2
#        with:
#          name: rpm-armv7hl
#        continue-on-error: true
#      - name: Download aarch64
#        uses: actions/download-artifact@v2
#        with:
#          name: rpm-aarch64
#        continue-on-error: true
#      - name: Download i486
#        uses: actions/download-artifact@v2
#        with:
#          name: rpm-i486
#        continue-on-error: true
#      - name: Extract Version Name
#        id: extract_name
#        uses: actions/github-script@v4
#        with:
#          result-encoding: string
#          script: |
#            return context.payload.ref.replace(/refs\/tags\//, '');
#      - name: Create a Release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          name: ${{ steps.extract_name.outputs.result }}
#          draft: false
#          prerelease: false
#          body: This release was autogenerated.
#          files: '*.rpm'
